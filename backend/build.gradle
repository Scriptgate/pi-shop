plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
}

import org.springframework.boot.gradle.plugin.SpringBootPlugin

repositories {
    mavenCentral()
}

dependencies {
    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation platform('org.junit:junit-bom:5.12.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.27.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

def buildClientToSpring = ':frontend:buildClientToSpring'

def bootRepackage = tasks.register('bootRepackage') {
    group = 'build'
    dependsOn buildClientToSpring, 'bootJar'
}

tasks.named('bootJar') {
    mustRunAfter buildClientToSpring
}
tasks.named('resolveMainClassName') {
    mustRunAfter buildClientToSpring
}
tasks.named('bootRun') {
    dependsOn bootRepackage
    standardInput = System.in
}
tasks.register('bootDist', Copy) {
    group = 'application'
    from bootJar
    into rootProject.layout.buildDirectory.dir('dist')
    rename { 'pi-shop.jar' }
}

